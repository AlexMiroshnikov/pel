INSTALL file for PEL: PHP EXIF Library.  A library with support for
reading and writing all EXIF headers of JPEG images using PHP.

Copyright (C) 2004  Martin Geisler <gimpster@users.sourceforge.net>
Licensed under the GNU GPL, see COPYING for details.


Requirements
************

PEL requires PHP 5.  The world is still waiting for the final release
of this version, but in the mean time the latest release candidate
should be used.  PEL was developed on and tested with PHP 5 Release
Candidate 2 and 3.


Installation
************

PEL is installed by downloading it and unpacking it in a directory of
your choice.  Your application can then start using the classed
defined in PEL, most likely the PelJpeg class which contain an entire
JPEG image or the PelTiff class for working with TIFF images.

It is important to understand that PEL is a library and not an
application with a pretty interface --- PEL is a collection of classes
that can be used to parse, read, and write EXIF headers.


Using PEL
*********

Your application should include at least the PelDataWindow.php file
for the definition of the basic PelDataWindow class which is used to
stored data in.  The PelJpeg class is also needed if PEL should do the
parsing of JPEG data for you.

This example will load a JPEG file given as a command line argument,
parse the EXIF data within, change the image description to 'Edited by
PEL', and finally save the file again.

  <?php
  require_once('PelJpeg.php');
  require_once('PelDataWindow.php');
  
  $data = new PelDataWindow(file_get_contents($argv[1]));
  $jpeg = new PelJpeg($data);
  
  $ifd0 = $jpeg->getSection(2)->getContent()->getTiff()->getIfd();
  $entry = $ifd0->getEntry(PelTag::IMAGE_DESCRIPTION);
  $entry->setValue('Edited by PEL');
  file_put_contents($argv[1], $jpeg->getBytes());
  ?>

See the test directory for this example and others as PHP files.  You
may have to adjust the path found in the very first line of the files
before you can execute them.


Changing PEL
************

If you find a bug in PEL then please send a report back so that it can
be fixed in the next version.  You can submit your bugs and other
requests here:

  http://sourceforge.net/tracker/?group_id=108380

If you change the code (to fix bugs or to implement enhancements),
then it is highly recommended that you download SimpleTest from

  http://sourceforge.net/projects/simpletest

and use it to check that your changes doesn't introduce new bugs.
Simply place SimpleTest in a directory parallel to the PEL
installation directory and run the test.php file found in the test
directory in the PEL.  It should report that all tests have passed, if
not, then the change has messed something up.
