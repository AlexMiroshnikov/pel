<refentry id="{@id}">                            <!-- -*- nxml -*- -->
  <refnamediv>
    <refname>Frequently Asked Questions (FAQ)</refname>
    <refpurpose>Quick answers to common questions</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <authorblurb>
      <para>
        <author>
          <firstname>Martin</firstname>
          <surname>Geisler</surname>
        </author>
        {@link mailto:mgeisler@users.sourceforge.net
        mgeisler@users.sourceforge.net}
      </para>
    </authorblurb>
  </refsynopsisdiv>

  {@toc}

<!--
    One will find lots of seeminly unnecessary comments in this file,
    but they are there to keep {@link xxx yyy} constructs on one line.
    This is necessary because the phpDocumentor 1.3.0RC3 parser
    apparently cannot handle linebreaks in that construct.
-->

<refsect1 id="{@id setValue-on-non-object}">
  <title>What does "<literal>Call to a member function
  setValue() on a non-object</literal>" mean?</title>

  <para>This is the error PHP gives when you call a method on a
  variable which is not an object.</para>

  <para>PEL uses objects to represent the entire structure of a JPEG
  image, and many of the methods defined on those objects return other
  objects.  In particular, the method {@link PelJpeg::getSection()}
  returns a {@link PelJpegContent} object and <!-- /////////////// -->
  {@link PelIfd::getEntry()} returns a {@link PelEntry} object.</para>

  <para>But both methods can return <literal>null</literal> if no such
  section or entry exist.  The correct way to use them is thus
  something along the lines of:</para>

  <programlisting role="php">
    <![CDATA[
$app1 = $jpeg->getSection(PelJpegMarker::APP1);
if ($app1 instanceof PelExif) {
  /* Do something with the EXIF data. */
} else {
  /* Sorry --- no EXIF data found. */
}
    ]]>
  </programlisting>
  
  <para>The same principle applies to the return values of <!-- // -->
  {@link PelIfd::getEntry()} and all other methods which return
  objects.</para>

</refsect1>

<refsect1 id="{@id IPTC-entries}">

  <title>Does PEL handle IPTC entries?</title>

  <para>No, PEL only deals with EXIF data, and no such extension is
  planned.  Try taking at look at the <!-- /////////////////////// -->
  {@link http://www.ozhiker.com/electronics/pjmt/ PHP JPEG Metadata
  Toolkit} which should handle IPTC along with a huge number of other
  metadata formats.</para>

</refsect1>


<refsect1 id="{@id unanswered-question}">

  <title>My question is not answered here</title>

  <para>Please ask your questions on the <!-- /////////////// -->
  {@link http://lists.sourceforge.net/lists/listinfo/pel-devel PEL
  Development List}.  If an answer is found, then the FAQ will be
  updated.</para>

</refsect1>


</refentry>
